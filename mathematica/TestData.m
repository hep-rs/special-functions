(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Input::Initialization:: *)
$MaxExtraPrecision=1000;


(* ::Input::Initialization:: *)
SetDirectory[DirectoryName[$InputFileName/."":>NotebookFileName[]]]


(* ::Input::Initialization:: *)
CreateDirectory["../tests/data/basic/",CreateIntermediateDirectories->True];


(* ::Input::Initialization:: *)
CreateDirectory["../tests/data/bessel/",CreateIntermediateDirectories->True];


(* ::Input::Initialization:: *)
Do[
Export[
"../tests/data/bessel/k"<>ToString[n]<>".csv",
Table[
N[{x,BesselK[n,x]},$MachinePrecision],
{x,10^Subdivide[-20,20,1000]}
]//.{
x_:>0/;Abs[x]<$MinMachineNumber,
Indeterminate->NaN
}
]
,
{n,Range[0,9]}
]


(* ::Input::Initialization:: *)
Export[
"../tests/data/bessel/k1_on_k2.csv",
Table[
N[{x,BesselK[1,x]/BesselK[2,x]},$MachinePrecision],
{x,10^Subdivide[-20,20,1000]}
]//.{
x_:>0/;Abs[x]<$MinMachineNumber,
Indeterminate->NaN
}
]


(* ::Input::Initialization:: *)
CreateDirectory["../tests/data/polylog/",CreateIntermediateDirectories->True];


(* ::Input::Initialization:: *)
Do[
Export[
"../tests/data/polylog/li"<>ToString[n]<>".csv",
Table[
N[{x,PolyLog[n,x]},$MachinePrecision],
{x,Join[-10^Subdivide[10,-10,500],1-10^Subdivide[0,-5,500]]}
]//.{
x_:>0/;Abs[x]<$MinMachineNumber,
Indeterminate->NaN
}
]
,
{n,Range[0,9]}
]


(* ::Input::Initialization:: *)
Normalization[\[Beta]_]=1/(2\[Pi]^2) Integrate[u^2/(E^(u \[Beta])-1),{u,0,\[Infinity]}];
FermiDirac[m_,\[Beta]_?NumericQ]:=1/(2\[Pi]^2) Quiet@NIntegrate[(u Sqrt[u^2-m^2])/(E^(u \[Beta])+1),{u,m,\[Infinity]},
Method->{"DoubleExponential","SymbolicProcessing"->False},
WorkingPrecision->200];
FermiDirac'[m_,\[Beta]_?NumericQ]:=1/(2\[Pi]^2) Quiet@NIntegrate[-((u Sqrt[u^2-m^2] E^(\[Beta] u))/(E^(u \[Beta])+1)^2),{u,m,\[Infinity]},
Method->{"DoubleExponential","SymbolicProcessing"->False},
WorkingPrecision->200];
FermiDiracNormalized[m_,\[Beta]_]:=FermiDirac[m,\[Beta]]/Normalization[\[Beta]];
BoseEinstein[m_,\[Beta]_?NumericQ]:=1/(2\[Pi]^2) Quiet@NIntegrate[(u Sqrt[u^2-m^2])/(E^(u \[Beta])-1),{u,m,\[Infinity]},
Method->{"DoubleExponential","SymbolicProcessing"->False},
WorkingPrecision->200];
BoseEinstein'[m_,\[Beta]_?NumericQ]:=1/(2\[Pi]^2) Quiet@NIntegrate[-((u Sqrt[u^2-m^2] E^(\[Beta] u))/(E^(u \[Beta])-1)^2),{u,m,\[Infinity]},
Method->{"DoubleExponential","SymbolicProcessing"->False},
WorkingPrecision->200];
BoseEinsteinNormalized[m_,\[Beta]_]:=BoseEinstein[m,\[Beta]]/Normalization[\[Beta]];


(* ::Input::Initialization:: *)
CreateDirectory["../tests/data/particle_statistics/",CreateIntermediateDirectories->True];


(* ::Input::Initialization:: *)
Export[
"../tests/data/particle_statistics/bose_einstein.csv",
Table[
N[{m,\[Beta],BoseEinstein[m,\[Beta]],BoseEinstein'[\[Beta]]},$MachinePrecision],
{m,10^Subdivide[-10,10,100]},{\[Beta],10^Subdivide[-10,10,100]}
]//.{
x_:>0/;Abs[x]<$MinMachineNumber,
Indeterminate->NaN
},
"TableHeadings"->{"m","beta","n","n_deriv"}
]
Export[
"../tests/data/particle_statistics/bose_einstein_normalized.csv",
Table[
N[{m,\[Beta],BoseEinsteinNormalized[\[Beta]],BoseEinsteinNormalized'[\[Beta]]},$MachinePrecision],
{m,10^Subdivide[-10,10,100]},{\[Beta],10^Subdivide[-10,10,100]}
]//.{
x_:>0/;Abs[x]<$MinMachineNumber,
Indeterminate->NaN
},
"TableHeadings"->{"m","beta","n","n_deriv"}
]


(* ::Input::Initialization:: *)
Export[
"../tests/data/particle_statistics/fermi_dirac.csv",
ParallelTable[
N[{m,\[Beta],FermiDirac[\[Beta]],FermiDirac'[\[Beta]]},$MachinePrecision],
{m,10^Subdivide[-10,10,100]},{\[Beta],10^Subdivide[-10,10,100]}
]//.{
x_:>0/;Abs[x]<$MinMachineNumber,
Indeterminate->NaN
},
"TableHeadings"->{"m","beta","n","n_deriv"}
]
Export[
"../tests/data/particle_statistics/fermi_dirac_normalized.csv",
ParallelTable[
N[{m,\[Beta],FermiDiracNormalized[\[Beta]],FermiDiracNormalized'[\[Beta]]},$MachinePrecision],
{m,10^Subdivide[-10,10,100]},{\[Beta],10^Subdivide[-10,10,100]}
]//.{
x_:>0/;Abs[x]<$MinMachineNumber,
Indeterminate->NaN
},
"TableHeadings"->{"m","beta","n","n_deriv"}
]
