(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Input::Initialization:: *)
$MaxExtraPrecision=1000;


(* ::Input::Initialization:: *)
SetDirectory[DirectoryName[$InputFileName/."":>NotebookFileName[]]]


(* ::Input::Initialization:: *)
CreateDirectory["../tests/data/basic/",CreateIntermediateDirectories->True];


(* ::Input::Initialization:: *)
CreateDirectory["../tests/data/bessel/",CreateIntermediateDirectories->True];


(* ::Input::Initialization:: *)
Export[
"../tests/data/bessel/k.csv",
ParallelTable[
N[{x,Sequence@@BesselK[Range[0,9],x]},$MachinePrecision],
{x,10^Subdivide[-10,10,1000]}
]//.{
x_:>0/;Abs[x]<$MinMachineNumber,
Indeterminate->NaN
},
"TableHeadings"->{"x","K0","K1","K2","K3","K4","K5","K6","K7","K8","K9"}
]


(* ::Input::Initialization:: *)
Export[
"../tests/data/bessel/k1_on_k2.csv",
ParallelTable[
N[{x,BesselK[1,x]/BesselK[2,x]},$MachinePrecision],
{x,10^Subdivide[-10,10,1000]}
]//.{
x_:>0/;Abs[x]<$MinMachineNumber,
Indeterminate->NaN
},
"TableHeadings"->{"x","K1/K2"}
]


(* ::Input::Initialization:: *)
CreateDirectory["../tests/data/polylog/",CreateIntermediateDirectories->True];


(* ::Input::Initialization:: *)
Export[
"../tests/data/polylog/li.csv",
ParallelTable[
N[{x,Sequence@@PolyLog[Range[0,9],x]},$MachinePrecision],
{x,Join[-10^Subdivide[10,-10,500],1-10^Subdivide[0,-5,500]]}
]//.{
x_:>0/;Abs[x]<$MinMachineNumber,
Indeterminate->NaN
},
"TableHeadings"->{"x","li0","li1","li2","li3","li4","li5","li6","li7","li8","li9"}
]


(* ::Input::Initialization:: *)
Normalization[\[Beta]_]=1/(2\[Pi]^2) Integrate[u^2/(E^(u \[Beta])-1),{u,0,\[Infinity]}];
FermiDirac[0,\[Beta]_]=1/(2\[Pi]^2) Integrate[u^2/(E^(u \[Beta])+1),{u,0,\[Infinity]}];
BoseEinstein[0,\[Beta]_]=1/(2\[Pi]^2) Integrate[u^2/(E^(u \[Beta])-1),{u,0,\[Infinity]}];
FermiDirac[m_,\[Beta]_?NumericQ]:=1/(2\[Pi]^2) Quiet@NIntegrate[(u Sqrt[u^2-m^2])/(E^(u \[Beta])+1),{u,m,\[Infinity]},
Method->{"DoubleExponential","SymbolicProcessing"->False},
WorkingPrecision->200];
BoseEinstein[m_,\[Beta]_?NumericQ]:=1/(2\[Pi]^2) Quiet@NIntegrate[(u Sqrt[u^2-m^2])/(E^(u \[Beta])-1),{u,m,\[Infinity]},
Method->{"DoubleExponential","SymbolicProcessing"->False},
WorkingPrecision->200];


(* ::Input::Initialization:: *)
Export[
"../tests/data/particle_statistics/massless.csv",
ParallelTable[
N[{\[Beta],BoseEinstein[0,\[Beta]],FermiDirac[0,\[Beta]]},$MachinePrecision],
{\[Beta],10^Subdivide[-10,10,1000]}
]//.{
x_:>0/;Abs[x]<$MinMachineNumber,
Indeterminate->NaN
},
"TableHeadings"->{"m","beta","n","n/n0"}
]


(* ::Input::Initialization:: *)
Export[
"../tests/data/particle_statistics/massive.csv",
Flatten[
ParallelTable[
Module[{be=BoseEinstein[m,\[Beta]],fd=FermiDirac[m,\[Beta]]},
N[{m,\[Beta],be,be/Normalization[\[Beta]],fd,fd/Normalization[\[Beta]]},$MachinePrecision]],
{m,10^Subdivide[-10,10,200]},{\[Beta],10^Subdivide[-10,10,100]}
],1]//.{
x_:>0/;Abs[x]<$MinMachineNumber,
Indeterminate->NaN
},
"TableHeadings"->{"m","beta","n","n/n0"}
]
