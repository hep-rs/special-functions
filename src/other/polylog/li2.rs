#![allow(clippy::all)]

use crate::approximations::polynomial;
use std::convert::identity;

approx_fn! {
    fn _lower(mod = lower, type = chebyshev, outer = identity, inner = identity);
}
approx_fn! {
    fn _upper(mod = upper, type = chebyshev, outer = identity, inner = identity);
}

#[inline]
pub(crate) fn eval(x: f64) -> f64 {
    if x < 0.0 {
        _lower(x)
    } else {
        _upper(x)
    }
}

pub(crate) mod lower {
    use super::*;

    pub fn lower(x: f64) -> f64 {
        polynomial(
            x.recip(),
            &[
                -1.644934066848226,
                -1.,
                -0.25,
                -0.1111111111111111,
                -0.0625,
                -0.04,
                -0.02777777777777778,
                -0.02040816326530612,
                -0.015625,
                -0.01234567901234568,
                -0.01,
            ],
        ) + polynomial((-x).ln(), &[0.0, 0.0, -0.5])
    }

    pub fn upper(x: f64) -> f64 {
        polynomial(
            x,
            &[
                0.0,
                1.,
                0.25,
                0.1111111111111111,
                0.0625,
                0.04,
                0.02777777777777778,
                0.02040816326530612,
                0.015625,
                0.01234567901234568,
                0.01,
            ],
        )
    }

    pub const COEFFICIENTS: [&[f64]; 4] = [
        &[
            -4.39027993082651,
            0.8363259510046651,
            0.04466832297661293,
            0.003695867467340194,
            0.0003651157110958984,
            0.00003976217125712242,
            4.607446866139839e-6,
            5.574303721660259e-7,
            6.962146550280096e-8,
            8.911108297022243e-9,
            1.16297430931852e-9,
            1.54202401951775e-10,
            2.071723154611779e-11,
            2.814519128551409e-12,
            3.860248143217971e-13,
            5.338417081078395e-14,
            7.436160814527537e-15,
            1.042453213707756e-15,
            1.469705073555091e-16,
            2.08263178933418e-17,
            2.964729367458715e-18,
            4.237997858593593e-19,
            6.081040717971661e-20,
            8.75580407274555e-21,
            1.2647132687501e-21,
            1.832136028824511e-22,
            2.661320399642369e-23,
            3.875512881166447e-24,
            5.659342813125837e-25,
            8.452750069447101e-26,
            1.212871428489013e-26,
        ],
        &[
            -2.905382636276069,
            0.6267288074850606,
            0.0288721145272757,
            0.002109867453484593,
            0.0001860006725587243,
            0.00001818278919895834,
            1.898570853732236e-6,
            2.075446949971942e-7,
            2.346907496744066e-8,
            2.7239231296529e-9,
            3.227629883631127e-10,
            3.889511835713261e-11,
            4.753251777342554e-12,
            5.87794538361748e-13,
            7.342781851675882e-14,
            9.25353326596104e-15,
            1.175140500971392e-15,
            1.502503891817223e-16,
            1.932676686401058e-17,
            2.499462071851668e-18,
            3.248215794784891e-19,
            4.239891670447799e-20,
            5.556534630199947e-21,
            7.308747263822632e-22,
            9.64584966909918e-23,
            1.276971850640216e-23,
            1.69536581994405e-24,
            2.256827752718379e-25,
            3.01257896134762e-26,
            4.100577701433007e-27,
            5.399155310356913e-28,
        ],
        &[
            -1.823088182342367,
            0.4397717898442634,
            0.01631231688573039,
            0.000984947389627417,
            0.00007255471616479953,
            5.964049106013355e-6,
            5.257600970002743e-7,
            4.865921129182563e-8,
            4.667973016378503e-9,
            4.603412099363472e-10,
            4.640330797142671e-11,
            4.761715606097136e-12,
            4.959157419054263e-13,
            5.22971710929722e-14,
            5.574297686359446e-15,
            5.99679657699702e-16,
            6.503694588525218e-17,
            7.103910538051371e-18,
            7.808833754900294e-19,
            8.632489499956188e-20,
            9.59181588663392e-21,
            1.070704482975316e-21,
            1.200218860383226e-22,
            1.350564017869298e-23,
            1.525090093098672e-24,
            1.727745437573195e-25,
            1.963181023773727e-26,
            2.236879556783452e-27,
            2.555723115324452e-28,
            2.96461262456096e-29,
            3.357984429628549e-30,
        ],
        &[
            -0.749839681635123,
            0.6559581744319583,
            0.0443275034537934,
            0.005098932258385205,
            0.0007296856921348187,
            0.0001177896167970239,
            0.00002052954842999571,
            3.773645068592097e-6,
            7.213370924223034e-7,
            1.420853982828497e-7,
            2.866014466861106e-8,
            5.893596822628552e-9,
            1.23144470098419e-9,
            2.607861310551301e-10,
            5.586423269789279e-11,
            1.208601836273141e-11,
            2.63744589553345e-12,
            5.799421462249741e-13,
            1.283846349843757e-13,
            2.859270653578434e-14,
            6.402443295813019e-15,
            1.440646618712257e-15,
            3.256078511898017e-16,
            7.389044261063948e-17,
            1.683020834941301e-17,
            3.846524837631337e-18,
            8.81888192663688e-19,
            2.028054505386563e-19,
            4.688548251746588e-20,
            1.138670483130388e-20,
            2.503336326068261e-21,
        ],
    ];

    pub const SPLITS: [f64; 5] = [
        -14.67338716866669,
        -7.358722787160574,
        -3.701390596407515,
        -1.872724501030985,
        -0.04405840565445586,
    ];
}

pub(crate) mod upper {
    use super::*;

    pub fn lower(x: f64) -> f64 {
        polynomial(
            x,
            &[
                0.0,
                1.,
                0.25,
                0.1111111111111111,
                0.0625,
                0.04,
                0.02777777777777778,
                0.02040816326530612,
                0.015625,
                0.01234567901234568,
                0.01,
            ],
        )
    }

    pub fn upper(x: f64) -> f64 {
        if x == 1.0 {
            return 1.644934066848226;
        }

        let xm1 = x - 1.0;
        let ln = (-xm1).ln();
        polynomial(
            xm1,
            &[
                1.644934066848226,
                1.,
                -0.25,
                0.1111111111111111,
                -0.0625,
                0.04,
                -0.02777777777777778,
                0.02040816326530612,
                -0.015625,
                0.01234567901234568,
                -0.01,
            ],
        ) + ln
            * polynomial(
                xm1,
                &[
                    0.0,
                    -1.,
                    0.5,
                    -0.3333333333333333,
                    0.25,
                    -0.2,
                    0.1666666666666667,
                    -0.1428571428571429,
                    0.125,
                    -0.1111111111111111,
                    0.1,
                ],
            )
    }

    pub const COEFFICIENTS: [&[f64]; 4] = [
        &[
            0.3031990170598208,
            0.2683580803528107,
            0.01012343388466111,
            0.0007006522418603808,
            0.0000621622629123748,
            6.315135836830048e-6,
            6.986781256805275e-7,
            8.196439418627729e-8,
            1.003545789773304e-8,
            1.269358915372876e-9,
            1.647224197892584e-10,
            2.182218150941842e-11,
            2.940639868563919e-12,
            4.019642009909143e-13,
            5.561688836310983e-14,
            7.776163459165993e-15,
            1.097166123084031e-15,
            1.560432436990102e-16,
            2.235032114160901e-17,
            3.221474274889435e-18,
            4.669553112756941e-19,
            6.80307055809397e-20,
            9.95718785454108e-21,
            1.463495288149889e-21,
            2.159298607204319e-22,
            3.1971566225022e-23,
            4.749242416653169e-24,
            7.076062833514919e-25,
            1.057736900120038e-25,
            1.619390429797383e-26,
            2.377844420892346e-27,
        ],
        &[
            0.7550862701015653,
            0.177940920399162,
            0.005627345924399142,
            0.0003480925612338642,
            0.00002825878832650223,
            2.655148627308405e-6,
            2.732166410252195e-7,
            2.990931361202492e-8,
            3.424281214876861e-9,
            4.055729729751275e-10,
            4.932990423527073e-11,
            6.129625966287937e-12,
            7.751471982859306e-13,
            9.94743885705462e-14,
            1.292555557915505e-14,
            1.697601848465802e-15,
            2.250397809949737e-16,
            3.007606437354423e-17,
            4.048641541753266e-18,
            5.485048480050109e-19,
            7.473849852856243e-20,
            1.023656013906386e-20,
            1.408631743648867e-21,
            1.946665341214867e-22,
            2.700697114243372e-23,
            3.760203793977333e-24,
            5.252604312724427e-25,
            7.359697712870746e-26,
            1.034507068338968e-26,
            1.485914115514676e-27,
            2.057282988624222e-28,
        ],
        &[
            1.048542966254892,
            0.1122065551415895,
            0.002837909538845409,
            0.000150348162368915,
            0.00001069150548329346,
            8.880168318881138e-7,
            8.113196897813926e-8,
            7.904626657792354e-9,
            8.065922533102179e-10,
            8.522366732405706e-11,
            9.25286923793094e-12,
            1.026749452286861e-12,
            1.1598917772051e-13,
            1.329999447635575e-14,
            1.544459410807436e-15,
            1.813064576743046e-16,
            2.148509762775878e-17,
            2.567087187448818e-18,
            3.089614158478262e-19,
            3.742646281748315e-20,
            4.560051104860288e-21,
            5.585042514652354e-22,
            6.872807854649567e-23,
            8.493900147087927e-24,
            1.053862000125297e-24,
            1.312267955735249e-25,
            1.639452996038545e-26,
            2.054492452067788e-27,
            2.582539758291229e-28,
            3.305223801613263e-29,
            4.10912676810558e-30,
        ],
        &[
            1.305298183405947,
            0.1480007355565724,
            0.007158954690077051,
            0.0008162072749089527,
            0.0001294039970999305,
            0.00002428473886696397,
            5.044359674075065e-6,
            1.121131823456625e-6,
            2.614976454778698e-7,
            6.323842745741175e-8,
            1.572876162657518e-8,
            4.000915929607235e-9,
            1.036565181073579e-9,
            2.726923549209918e-10,
            7.26714452135065e-11,
            1.958234068067385e-11,
            5.327606897677914e-12,
            1.461652735861451e-12,
            4.039901557430037e-13,
            1.123967655597728e-13,
            3.145515795643026e-14,
            8.849705893405166e-15,
            2.501757824673743e-15,
            7.103161733473447e-16,
            2.024806679056075e-16,
            5.792928919838614e-17,
            1.662975157408342e-17,
            4.791093095630266e-18,
            1.392550167189164e-18,
            4.341492236561949e-19,
            1.162017696368712e-19,
        ],
    ];

    pub const SPLITS: [f64; 5] = [
        0.04383032363457937,
        0.5001514198883331,
        0.7283119680152099,
        0.8423922420786484,
        0.956472516142087,
    ];
}
