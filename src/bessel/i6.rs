#![allow(clippy::all)]

use crate::approximations::polynomial;

pub fn lower(x: f64) -> f64 {
    let x2 = x.powi(2);

    x.powi(6)
        * polynomial(
            x2,
            &[
                0.00002170138888888889,
                7.750496031746032e-7,
                1.211015004960317e-8,
                1.121310189778072e-10,
                7.008188686112948e-13,
                3.185540311869522e-15,
            ],
        )
}

pub fn upper(x: f64) -> f64 {
    x.exp() / x.sqrt()
        * polynomial(
            x.recip(),
            &[
                0.3989422804014327,
                -7.131093262175609,
                60.1685993996067,
                -298.3359720230499,
                885.6849169434294,
                -1394.953744185901,
                668.4153357557444,
                298.3997034623859,
                377.6621246945821,
                760.569556676589,
            ],
        )
}

pub const COEFFICIENTS: [&[f64]; 3] = [
    &[
        -10.70571398463734,
        3.900935357759947,
        0.01647090476560376,
        0.003368872716103732,
        0.0005181709978921308,
        0.00006287922739182038,
        6.116866710521016e-6,
        4.645029893248527e-7,
        2.360895093579399e-8,
        -4.565474378811427e-12,
        -1.770709951020177e-10,
        -2.504547908722611e-11,
        -2.109328491371339e-12,
        -8.266180300221129e-14,
        8.361069356684463e-15,
        2.247098636873465e-15,
        2.84081891730567e-16,
        2.311219520449345e-17,
        7.451664496896753e-19,
        -1.361272186465704e-19,
        -3.231132281903491e-20,
        -4.059656143805873e-21,
        -3.322035288484515e-22,
        -1.030433559424452e-23,
        2.168289830946728e-24,
        5.125150323604208e-25,
        6.549188286389948e-26,
        5.50259482651445e-27,
        1.862508255314474e-28,
        -3.55015149516036e-29,
        -8.555032565558491e-30,
    ],
    &[
        -2.433577403881055,
        4.507883488400095,
        0.1877111615894981,
        0.03460840840335834,
        0.004334390811122353,
        0.0003350725880488068,
        5.840056627066937e-6,
        -1.948234757041206e-6,
        -1.391177497882348e-7,
        2.900481812047722e-8,
        6.641693463419922e-9,
        2.454150262579559e-10,
        -1.146738699096913e-10,
        -2.169745132724313e-11,
        -3.999753670592075e-13,
        4.70653161834299e-13,
        8.141402233799329e-14,
        6.733760062743347e-16,
        -1.985777341315153e-15,
        -3.344773849683208e-16,
        -1.959106706847784e-18,
        8.523581301429022e-18,
        1.457377246788787e-18,
        1.417106542860197e-20,
        -3.679061994217231e-20,
        -6.576939402903656e-21,
        -1.18173023070248e-22,
        1.582078646718233e-22,
        3.020741822286303e-23,
        7.314364926457883e-25,
        -6.730948273277166e-25,
    ],
    &[
        32.16396266953558,
        38.94589849633376,
        11.21060409069609,
        2.453215701254006,
        0.3679347945570057,
        0.04713766967390196,
        0.005381072643700697,
        0.0003674007109552623,
        0.00004315636873730261,
        5.975226621699111e-6,
        -1.417591495814417e-6,
        2.894647796054892e-7,
        3.020206301876505e-8,
        -3.406214975435828e-8,
        9.49484946742126e-9,
        -2.36943218860355e-10,
        -8.404380617091882e-10,
        3.326145643171027e-10,
        -3.431562414968103e-11,
        -2.347799139207684e-11,
        1.255522881990562e-11,
        -1.945973954903749e-12,
        -7.654786444670438e-13,
        5.172269622127767e-13,
        -9.45773433203751e-14,
        -3.082483155598008e-14,
        2.319814787856213e-14,
        -4.247643741870142e-15,
        -1.515416685178438e-15,
        1.016037651482007e-15,
        -1.67777088488879e-16,
    ],
];

pub const SPLITS: [f64; 4] = [
    -0.6441323614070347,
    0.6378158232017811,
    1.919764007810597,
    4.483660377028228,
];
