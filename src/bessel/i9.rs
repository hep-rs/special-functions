#![allow(clippy::all)]

use crate::approximations::polynomial;

pub fn lower(x: f64) -> f64 {
    let x2 = x.powi(2);

    x.powi(9)
        * polynomial(
            x2,
            &[
                5.382288910934744e-9,
                1.345572227733686e-10,
                1.529059349697371e-12,
                1.061846770623174e-14,
                5.105032551072952e-17,
                1.823225911097483e-19,
            ],
        )
}

pub fn upper(x: f64) -> f64 {
    x.exp() / x.sqrt()
        * polynomial(
            x.recip(),
            &[
                0.3989422804014327,
                -16.10729457120784,
                317.1123618706544,
                -3950.691508305237,
                33951.25514949813,
                -206253.8750332011,
                872282.0131612464,
                -2.414352000714164e6,
                3.734700751104723e6,
                -1.815479531787018e6,
            ],
        )
}

pub const COEFFICIENTS: [&[f64]; 3] = [
    &[
        -17.22545742659925,
        6.353195917127615,
        0.02093842225610995,
        0.004651162566839127,
        0.0007804924420660401,
        0.0001039318840929651,
        0.00001121531895967053,
        9.69437736535542e-7,
        6.14393285431674e-8,
        1.581651065121384e-9,
        -2.680703564567475e-10,
        -5.44165339470168e-11,
        -5.917719369598069e-12,
        -3.951284775940758e-13,
        -1.089537972855978e-15,
        4.376490531477621e-15,
        7.868670695399728e-16,
        8.789688882707851e-17,
        6.190980893937473e-18,
        2.616525606931258e-20,
        -7.435742845194185e-20,
        -1.418099150506947e-20,
        -1.683029348354685e-21,
        -1.295593269415889e-22,
        -2.077643356151788e-24,
        1.347910686509705e-24,
        2.858248609342381e-25,
        3.646493069918425e-26,
        3.100447921053325e-27,
        9.02817441058226e-29,
        -2.428941633234868e-29,
    ],
    &[
        -3.825652291216018,
        7.267257582569484,
        0.2996407150328636,
        0.06005137864145056,
        0.008233938469786029,
        0.0007101675933500061,
        0.00001771979155757592,
        -4.22504493477334e-6,
        -3.804805388959745e-7,
        6.786677379661373e-8,
        1.825912308191779e-8,
        8.258052059572098e-10,
        -3.478767366842919e-10,
        -7.215673690127472e-11,
        -1.254626436281917e-12,
        1.839147655780465e-12,
        3.251433174551103e-13,
        -1.955390080745501e-15,
        -1.004230482299036e-14,
        -1.604364439156113e-15,
        3.901211416132831e-17,
        5.643022085056303e-17,
        8.472996509438378e-18,
        -3.116437359120182e-19,
        -3.237883934231492e-19,
        -4.712271357619911e-20,
        2.035084419078692e-21,
        1.883523982300528e-21,
        2.724622668774387e-22,
        -1.360836283580999e-23,
        -1.104113450621001e-23,
    ],
    &[
        57.71349334949773,
        71.76017993182583,
        22.34550549613028,
        5.243744153836969,
        0.8617014618258817,
        0.1199637256954929,
        0.01451880587587807,
        0.001195225127911331,
        0.0001362559019394175,
        0.00001464071362318736,
        -2.395914565496954e-6,
        6.906502496272875e-7,
        9.4312241173573e-9,
        -5.60808933616708e-8,
        2.00905738466757e-8,
        -2.461108902407134e-9,
        -9.36719026941137e-10,
        5.960356815403865e-10,
        -1.382436948619999e-10,
        -6.650376001817101e-12,
        1.710567159420694e-11,
        -6.100607209781324e-12,
        5.67877588666439e-13,
        4.563404851423169e-13,
        -2.505613467569161e-13,
        4.880974195210859e-14,
        9.93243149830768e-15,
        -1.003845089579101e-14,
        2.892190705065128e-15,
        2.191334613976496e-16,
        -3.978670244390051e-16,
    ],
];

pub const SPLITS: [f64; 4] = [
    -0.5034064294643694,
    0.8939933605384814,
    2.291393150541332,
    5.086192730547034,
];
