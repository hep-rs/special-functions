initSidebarItems({"fn":[["borosh13","This multiplicative generator is taken from Knuth’s Seminumerical Algorithms, 3rd Ed., pages 106–108. Their sequence is,"],["coveyou","This is the Coveyou random number generator. It is taken from Knuth’s Seminumerical Algorithms, 3rd Ed., Section 3.2.2. Its sequence is,"],["fishman18","This multiplicative generator is taken from Knuth’s Seminumerical Algorithms, 3rd Ed., pages 106–108. Their sequence is,"],["fishman20","This multiplicative generator is taken from Knuth’s Seminumerical Algorithms, 3rd Ed., pages 106–108. Their sequence is,"],["fishman2x","This is the L’Ecuyer–Fishman random number generator. It is taken from Knuth’s Seminumerical Algorithms, 3rd Ed., page 108. Its sequence is,"],["knuthran","This is a second-order multiple recursive generator described by Knuth in Seminumerical Algorithms, 3rd Ed., Section 3.6. Knuth provides its C code. The updated routine gsl_rng_knuthran2002 is from the revised 9th printing and corrects some weaknesses in the earlier version, which is implemented as gsl_rng_knuthran."],["knuthran2","This is a second-order multiple recursive generator described by Knuth in Seminumerical Algorithms, 3rd Ed., page 108. Its sequence is,"],["knuthran2002","This is a second-order multiple recursive generator described by Knuth in Seminumerical Algorithms, 3rd Ed., Section 3.6. Knuth provides its C code. The updated routine gsl_rng_knuthran2002 is from the revised 9th printing and corrects some weaknesses in the earlier version, which is implemented as gsl_rng_knuthran."],["lecuyer21","This multiplicative generator is taken from Knuth’s Seminumerical Algorithms, 3rd Ed., pages 106–108. Their sequence is,"],["minstd","This is Park and Miller’s “minimal standard” MINSTD generator, a simple linear congruence which takes care to avoid the major pitfalls of such algorithms. Its sequence is,"],["r250","This is the shift-register generator of Kirkpatrick and Stoll. The sequence is based on the recurrence"],["randu","This is the IBM RANDU generator. Its sequence is"],["ranf","This is the CRAY random number generator RANF. Its sequence is"],["ranmar","This is the RANMAR lagged-fibonacci generator of Marsaglia, Zaman and Tsang. It is a 24-bit generator, originally designed for single-precision IEEE floating point numbers.  It was included in the CERNLIB high-energy physics library."],["slatec","This is the SLATEC random number generator RAND. It is ancient. The original source code is available from NETLIB."],["transputer","This is the random number generator from the INMOS Transputer Development system. Its sequence is,"],["tt800","This is an earlier version of the twisted generalized feedback shift-register generator, and has been superseded by the development of MT19937. However, it is still an acceptable generator in its own right. It has a period of 2^800 and uses 33 words of storage per generator."],["uni","This is a reimplementation of the 16-bit SLATEC random number generator RUNIF. A generalization of the generator to 32 bits is provided by gsl_rng_uni32. The original source code is available from NETLIB."],["uni32","This is a reimplementation of the 16-bit SLATEC random number generator RUNIF. A generalization of the generator to 32 bits is provided by gsl_rng_uni32. The original source code is available from NETLIB."],["vax","This is the VAX generator MTH$RANDOM. Its sequence is,"],["waterman14","This multiplicative generator is taken from Knuth’s Seminumerical Algorithms, 3rd Ed., pages 106–108. Their sequence is,"],["zuf","This is the ZUFALL lagged Fibonacci series generator of Peterson. Its sequence is,"]]});