initSidebarItems({"fn":[["poly_dd_eval","This function evaluates the polynomial stored in divided-difference form in the arrays dd and xa of length size at the point x."],["poly_dd_hermite_init","This function computes a divided-difference representation of the interpolating Hermite polynomial for the points (x, y) stored in the arrays xa and ya of length size. Hermite interpolation constructs polynomials which also match first derivatives dy/dx which are provided in the array dya also of length size. The first derivatives can be incorported into the usual divided-difference algorithm by forming a new dataset z = {x_0,x_0,x_1,x_1,...}, which is stored in the array za of length 2size on output. On output the divided-differences of the Hermite representation are stored in the array dd, also of length 2size. Using the notation above, dd[k] = [z_0,z_1,...,z_k]. The resulting Hermite polynomial can be evaluated by calling gsl_poly_dd_eval and using za for the input argument xa."],["poly_dd_init","This function computes a divided-difference representation of the interpolating polynomial for the points (x, y) stored in the arrays xa and ya of length size. On output the divided-differences of (xa,ya) are stored in the array dd, also of length size. Using the notation above, dd[k] = [x_0,x_1,...,x_k]."],["poly_dd_taylor","This function converts the divided-difference representation of a polynomial to a Taylor expansion. The divided-difference representation is supplied in the arrays dd and xa of length size. On output the Taylor coefficients of the polynomial expanded about the point xp are stored in the array c also of length size. A workspace of length size must be provided in the array w."]]});